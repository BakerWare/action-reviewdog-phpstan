name: Publish PHP Docker images
on:
    push:

env:
    REGISTRY: ghcr.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: ${{ github.repository }}

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            extensions: ${{ steps.config.outputs.extensions }}
            environment: ${{ steps.config.outputs.environment }}
            versions: ${{ steps.config.outputs.versions }}
            dev_composer_packages: ${{ steps.config.outputs.dev_composer_packages }}
        steps:
            - uses: actions/checkout@v1
            - name: Run read-yaml action
              id: config
              uses: CumulusDS/get-yaml-paths-action@v1.0.1
              with:
                  file: ".github/config.yml"
                  extensions: extensions
                  environment: environment
                  versions: versions
    build_and_publish:
        continue-on-error: true
        runs-on: ubuntu-latest
        needs: prepare
        strategy:
            matrix:
                environment: ${{ fromJSON(needs.prepare.outputs.environment) }}
                versions: ${{ fromJSON(needs.prepare.outputs.versions) }}
        steps:
            - uses: actions/checkout@v1
            - uses: jsdaniell/create-json@v1.2.2
              with:
                  name: "versions.json"
                  json: ${{ toJSON(matrix.versions) }}
            - name: Debug and prepare
              run: |
                  sudo apt install jq
                  echo ${{ matrix.environment }}
                  echo ${{ matrix.versions.version }}
                  echo ${{ matrix.versions.suffix }}
                  EXTENSIONS=$(jq '.extensions[]' versions.json | jq -s add | jq -r '. | join(" ")')
                  echo "EXTENSIONS=${EXTENSIONS}" >>${GITHUB_ENV}
                  DEV_COMPOSER_PACKAGES=$(jq '.dev_composer_packages[]' versions.json | jq -s add | jq -r '. | join(" ")')
                  echo "DEV_COMPOSER_PACKAGES=${DEV_COMPOSER_PACKAGES}" >>${GITHUB_ENV}
            - name: Add HTTP basic auth credentials
              run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/php/auth.json
            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: downcase REPO
              run: |
                  echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.REPO }}/php-${{ matrix.versions.version }}
                  tags: |
                      - type=raw,value=latest
            - uses: 8BitJonny/gh-get-current-pr@2.2.0
              id: PR
              with:
                  filterOutClosed: true
            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v3
              with:
                  file: php/Dockerfile
                  context: .
                  cache-from: type=registry,ref=${{ env.REPO }}/php-${{ matrix.versions.version }}
                  cache-to: type=inline
                  target: ${{ matrix.environment }}
                  push: ${{ github.ref == 'refs/heads/main' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: |
                      PHP_VERSION=${{ matrix.versions.version }}
                      PHP_EXTENSIONS=${{ env.EXTENSIONS }}
                      PHP_ENVIRONMENT=${{ matrix.environment }}
                      PHP_DEV_COMPOSER_PACKAGES=${{ env.DEV_COMPOSER_PACKAGES }}
            - name: Remove auth.json file
              if: steps.docker-file-changed.outputs.any_changed == 'true'
              run: rm -f $GITHUB_WORKSPACE/php/auth.json
